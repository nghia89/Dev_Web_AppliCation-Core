var productCategoryController = function () { function t() { $("#hidIdM").val(0), $("#txtNameM").val(""), e(""), $("#txtDescM").val(""), $("#txtOrderM").val(""), $("#txtHomeOrderM").val(""), $("#txtImageM").val(""), $("#txtMetakeywordM").val(""), $("#txtMetaDescriptionM").val(""), $("#txtSeoPageTitleM").val(""), $("#txtSeoAliasM").val(""), $("#ckStatusM").prop("checked", !0), $("#ckShowHomeM").prop("checked", !1) } function e(t) { $.ajax({ url: "/Admin/ProductCategory/GetAll", type: "GET", dataType: "json", async: !1, success: function (e) { var r = []; $.each(e, function (t, e) { r.push({ id: e.Id, text: e.Name, parentId: e.ParentId, sortOrder: e.SortOrder }) }); var a = structures.unflattern(r); $("#ddlCategoryIdM").combotree({ data: a }), void 0 !== t && $("#ddlCategoryIdM").combotree("setValue", t) } }) } function r() { $.ajax({ url: "/Admin/ProductCategory/GetAll", dataType: "json", success: function (t) { var e = []; $.each(t, function (t, r) { e.push({ id: r.Id, text: r.Name, parentId: r.ParentId, sortOrder: r.SortOrder }) }); var a = structures.unflattern(e); a.sort(function (t, e) { return t.sortOrder - e.sortOrder }), $("#treeProductCategory").tree({ data: a, dnd: !0, onContextMenu: function (t, e) { t.preventDefault(), $("#hidIdM").val(e.id), $("#contextMenu").menu("show", { left: t.pageX, top: t.pageY }) }, onDrop: function (t, e, a) { console.log(t), console.log(e), console.log(a); var o = $(this).tree("getNode", t); if ("append" === a) { var n = []; $.each(o.children, function (t, e) { n.push({ key: e.id, value: t }) }), $.ajax({ url: "/Admin/ProductCategory/UpdateParentId", type: "post", dataType: "json", data: { sourceId: e.id, targetId: o.id, items: n }, success: function (t) { r() } }) } else "top" !== a && "bottom" !== a || $.ajax({ url: "/Admin/ProductCategory/ReOrder", type: "post", dataType: "json", data: { sourceId: e.id, targetId: o.id }, success: function (t) { r() } }) } }) } }) } this.initialize = function () { r(), $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "en", rules: { txtNameM: { required: !0 }, txtOrderM: { number: !0 }, txtHomeOrderM: { number: !0 } } }), $("#btnCreate").off("click").on("click", function () { e(), $("#modal-add-edit").modal("show") }), $("#btnSelectImg").on("click", function () { $("#fileInputImage").click() }), $("#fileInputImage").on("change", function () { for (var t = $(this).get(0), e = t.files, r = new FormData, a = 0; a < e.length; a++)r.append(e[a].name, e[a]); $.ajax({ type: "POST", url: "/Admin/Upload/UploadImage", contentType: !1, processData: !1, data: r, success: function (t) { $("#txtImage").val(t), structures.notify("Upload image succesful!", "success") }, error: function () { structures.notify("There was error uploading files!", "error") } }) }), $("#modal-add-edit").on("hidden.bs.modal", function () { t() }), $("body").on("click", "#btnEdit", function (t) { t.preventDefault(); var r = $("#hidIdM").val(); $.ajax({ type: "GET", url: "/Admin/ProductCategory/GetById", data: { id: r }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { var r = t; $("#hidIdM").val(r.Id), $("#txtNameM").val(r.Name), e(r.CategoryId), $("#txtDescM").val(r.Description), $("#txtImage").val(r.Image), $("#txtSeoKeywordM").val(r.SeoKeywords), $("#txtSeoDescriptionM").val(r.SeoDescription), $("#txtSeoPageTitleM").val(r.SeoPageTitle), $("#txtSeoAliasM").val(r.SeoAlias), $("#ckStatusM").prop("checked", 1 === r.Status), $("#ckShowHomeM").prop("checked", r.HomeFlag), $("#txtOrderM").val(r.SortOrder), $("#txtHomeOrderM").val(r.HomeOrder), $("#modal-add-edit").modal("show"), structures.stopLoading() }, error: function (t) { structures.notify("Có lỗi xảy ra", "error"), structures.stopLoading() } }) }), $("body").on("click", "#btnDelete", function (t) { t.preventDefault(); var e = $("#hidIdM").val(); structures.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/ProductCategory/Delete", data: { id: e }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { structures.notify("Deleted success", "success"), structures.stopLoading(), r() }, error: function (t) { structures.notify("Has an error in deleting progress", "error"), structures.stopLoading() } }) }) }), $("#btnSave").on("click", function (e) { if ($("#frmMaintainance").valid()) { e.preventDefault(); var a = parseInt($("#hidIdM").val()), o = $("#txtNameM").val(), n = $("#ddlCategoryIdM").combotree("getValue"), d = $("#txtDescM").val(), s = $("#txtImage").val(), c = parseInt($("#txtOrderM").val()), i = $("#txtHomeOrderM").val(), u = $("#txtSeoKeywordM").val(), l = $("#txtSeoDescriptionM").val(), p = $("#txtSeoPageTitleM").val(), f = $("#txtSeoAliasM").val(), m = !0 === $("#ckStatusM").prop("checked") ? 1 : 0, g = $("#ckShowHomeM").prop("checked"); $.ajax({ type: "POST", url: "/Admin/ProductCategory/SaveEntity", data: { Id: a, Name: o, Description: d, ParentId: n, HomeOrder: i, SortOrder: c, HomeFlag: g, Image: s, Status: m, SeoPageTitle: p, SeoAlias: f, SeoKeywords: u, SeoDescription: l }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (e) { structures.notify("Update success", "success"), $("#modal-add-edit").modal("hide"), t(), structures.stopLoading(), r() }, error: function (t) { var e = t.responseJSON.Message; structures.notify(e, "error"), structures.stopLoading() } }) } return !1 }) } };