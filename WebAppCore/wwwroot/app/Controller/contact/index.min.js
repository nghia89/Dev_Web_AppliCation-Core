var conactController = function () { function t(e) { var a = $("#table-template").html(), n = ""; $.ajax({ type: "GET", data: { keyword: $("#txtKeyword").val(), page: structures.configs.pageIndex, pageSize: structures.configs.pageSize }, url: "/admin/Contact/GetAllPaging", dataType: "JSON", success: function (o) { $.each(o.Results, function (t, e) { n += Mustache.render(a, { Id: e.Id, Name: e.Name, Phone: e.Phone, Email: e.Email, Lat: e.Lat, Lng: e.Lng }) }), $("#lblTotalRecords").text(o.RowCount), "" !== n && $("#tbl-content").html(n), function (t, e, a) { var n = Math.ceil(t / structures.configs.pageSize); 0 !== $("#paginationUL a").length && !0 !== a || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")); $("#paginationUL").twbsPagination({ totalPages: n, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { structures.configs.pageIndex = a, setTimeout(e(), 200) } }) }(o.RowCount, function () { t() }, e) }, error: function (t) { console.log(t), structures.notify("Không thể tải dữ liệu", "error") } }) } function e() { $("#hidId").val(""), $("#txtName").val(""), $("#txtImage").val(""), $("#txtUrl").val(""), $("#txtMetaDescription").val(""), $("#txtPhone").val(""), $("#txtEmail").val(""), $("#txtLat").val(""), $("#txtLng").val(""), $("#txtWebsite").val(""), $("#txtAddress").val(""), $("#ckStatusM").prop("checked", !0) } this.initialize = function () { t(), $("#ddl-show-page").on("change", function () { structures.configs.pageSize = $(this).val(), structures.configs.pageIndex = 1, t(!0) }), $("#btnSearch").on("click", function () { t() }), $("#txtKeyword").on("keypress", function (e) { 13 === e.which && t() }), $("#btn-create").on("click", function () { e(), $("#modal-add-edit").modal("show") }), $("body").on("click", ".btn-edit", function (t) { t.preventDefault(); var e, a = $(this).data("id"); e = a, $.ajax({ type: "GET", url: "/Admin/Contact/GetById", data: { id: e }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { var e = t; $("#hidId").val(e.Id), $("#txtName").val(e.Name), $("#txtPhone").val(e.Phone), $("#txtEmail").val(e.Email), $("#txtLat").val(e.Lat), $("#txtLng").val(e.Lng), $("#txtWebsite").val(e.Website), $("#txtAddress").val(e.Address), $("#ckStatusM").prop("checked", 1 === e.Status), $("#modal-add-edit").modal("show"), structures.stopLoading() }, error: function (t) { structures.notify("Có lỗi xảy ra", "error"), structures.stopLoading() } }) }), $("#btnSave").on("click", function (a) { !function (a) { if ($("#frmMaintainance").valid()) { a.preventDefault(); var n = $("#hidId").val(), o = $("#txtName").val(), s = $("#txtPhone").val(), i = $("#txtEmail").val(), r = $("#txtLat").val(), c = $("#txtLng").val(), u = $("#txtWebsite").val(), l = $("#txtAddress").val(), d = !0 === $("#ckStatus").prop("checked") ? 1 : 0; $.ajax({ type: "POST", url: "/Admin/Contact/SaveEntity", data: { Id: n, Name: o, Phone: s, Email: i, Lat: r, Lng: c, Website: u, Address: l, Status: d }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (a) { structures.notify("Update product successful", "success"), $("#modal-add-edit").modal("hide"), e(), structures.stopLoading(), t(!0) }, error: function () { structures.notify("Có lổi trong quá trình thêm.", "error"), structures.stopLoading() } }) } }(a) }), $("body").on("click", ".btn-delete", function (e) { e.preventDefault(); var a, n = $(this).data("id"); a = n, structures.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/Contact/Delete", data: { id: a }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (e) { structures.notify("Delete successful", "success"), structures.stopLoading(), t() }, error: function (t) { structures.notify("Has an error in delete progress", "error"), structures.stopLoading() } }) }) }), $("#btnSelectImg").on("click", function () { $("#fileInputImage").click() }), $("#fileInputImage").on("change", function () { for (var t = $(this).get(0), e = t.files, a = new FormData, n = 0; n < e.length; n++)a.append(e[n].name, e[n]); $.ajax({ type: "POST", url: "/Admin/Upload/UploadImageSlide", contentType: !1, processData: !1, data: a, success: function (t) { $("#txtImage").val(t), structures.notify("Upload image succesful!", "success") }, error: function () { structures.notify("There was error uploading files!", "error") } }) }), CKEDITOR.replace("txtContent", {}), $.fn.modal.Constructor.prototype.enforceFocus = function () { $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function (t) { this.$element[0] === t.target || this.$element.has(t.target).length || $(t.target).closest(".cke_dialog, .cke").length || this.$element.trigger("focus") }, this)) } } };