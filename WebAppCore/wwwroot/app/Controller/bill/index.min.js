var BillController = function () { var t = { products: [], colors: [], sizes: [], paymentMethods: [], billStatuses: [] }; function e(e) { var a = "<select class='form-control ddlProductId'>"; return $.each(t.products, function (t, o) { e === o.Id ? a += '<option value="' + o.Id + '" selected="select">' + o.Name + "</option>" : a += '<option value="' + o.Id + '">' + o.Name + "</option>" }), a += "</select>" } function a(e) { var a = "<select class='form-control ddlColorId'>"; return $.each(t.colors, function (t, o) { e === o.Id ? a += '<option value="' + o.Id + '" selected="select">' + o.Name + "</option>" : a += '<option value="' + o.Id + '">' + o.Name + "</option>" }), a += "</select>" } function o(e) { var a = "<select class='form-control ddlSizeId'>"; return $.each(t.sizes, function (t, o) { e === o.Id ? a += '<option value="' + o.Id + '" selected="select">' + o.Name + "</option>" : a += '<option value="' + o.Id + '">' + o.Name + "</option>" }), a += "</select>" } function n() { $("#hidId").val(0), $("#txtCustomerName").val(""), $("#txtCustomerAddress").val(""), $("#txtCustomerMobile").val(""), $("#txtCustomerMessage").val(""), $("#ddlPaymentMethod").val(""), $("#ddlCustomerId").val(""), $("#ddlBillStatus").val(""), $("#tbl-bill-details").html("") } function r(t) { $.ajax({ type: "GET", url: "/admin/bill/GetAllPaging", data: { startDate: $("#txtFromDate").val(), endDate: $("#txtToDate").val(), keyword: $("#txtSearchKeyword").val(), page: structures.configs.pageIndex, pageSize: structures.configs.pageSize }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (e) { var a = $("#table-template").html(), o = ""; e.RowCount > 0 ? ($.each(e.Results, function (t, e) { o += Mustache.render(a, { CustomerName: e.CustomerName, Id: e.Id, PaymentMethod: s(e.PaymentMethod), DateCreated: structures.dateTimeFormatJson(e.DateCreated), BillStatus: l(e.BillStatus) }) }), $("#lbl-total-records").text(e.RowCount), void 0 !== o && $("#tbl-content").html(o), function (t, e, a) { var o = Math.ceil(t / structures.configs.pageSize); 0 !== $("#paginationUL a").length && !0 !== a || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")); $("#paginationUL").twbsPagination({ totalPages: o, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { structures.configs.pageIndex = a, setTimeout(e(), 200) } }) }(e.RowCount, function () { r() }, t)) : ($("#lbl-total-records").text("0"), $("#tbl-content").html("")), structures.stopLoading() }, error: function (t) { console.log(t) } }) } function s(e) { var a = $.grep(t.paymentMethods, function (t, a) { return t.Value === e }); return a.length > 0 ? a[0].Name : "" } function l(e) { var a = $.grep(t.billStatuses, function (t, a) { return t.Value === e }); return a.length > 0 ? a[0].Name : "" } this.initialize = function () { $.when($.ajax({ type: "GET", url: "/admin/bill/GetBillStatus", dataType: "json", success: function (e) { t.billStatuses = e; var a = ""; $.each(e, function (t, e) { a += "<option value='" + e.Value + "'>" + e.Name + "</option>" }), $("#ddlBillStatus").html(a) } }), $.ajax({ type: "GET", url: "/admin/bill/GetPaymentMethod", dataType: "json", success: function (e) { t.paymentMethods = e; var a = ""; $.each(e, function (t, e) { a += "<option value='" + e.Value + "'>" + e.Name + "</option>" }), $("#ddlPaymentMethod").html(a) } }), $.ajax({ type: "GET", url: "/Admin/Bill/GetColors", dataType: "json", success: function (e) { t.colors = e }, error: function () { structures.notify("Has an error in progress", "error") } }), $.ajax({ type: "GET", url: "/Admin/Bill/GetSizes", dataType: "json", success: function (e) { t.sizes = e }, error: function () { structures.notify("Has an error in progress", "error") } })).then(function () { r() }), $("#txtFromDate, #txtToDate").datepicker({ autoclose: !0, format: "dd/mm/yyyy" }), $("#frmMaintainance").validate({ errorClass: "red", ignore: [], lang: "vi", rules: { txtCustomerName: { required: !0 }, txtCustomerAddress: { required: !0 }, txtCustomerMobile: { required: !0 }, txtCustomerMessage: { required: !0 }, ddlBillStatus: { required: !0 } } }), $("#txt-search-keyword").keypress(function (t) { 13 === t.which && (t.preventDefault(), r()) }), $("#btn-search").on("click", function () { r() }), $("#btn-create").on("click", function () { n(), $("#modal-detail").modal("show") }), $("#ddl-show-page").on("change", function () { structures.configs.pageSize = $(this).val(), structures.configs.pageIndex = 1, r(!0) }), $("body").on("click", ".btn-view", function (n) { n.preventDefault(); var r = $(this).data("id"); $.ajax({ type: "GET", url: "/Admin/Bill/GetById", data: { id: r }, beforeSend: function () { structures.startLoading() }, success: function (n) { var r = n; $("#hidId").val(r.Id), $("#txtCustomerName").val(r.CustomerName), $("#txtCustomerAddress").val(r.CustomerAddress), $("#txtCustomerMobile").val(r.CustomerMobile), $("#txtCustomerMessage").val(r.CustomerMessage), $("#ddlPaymentMethod").val(r.PaymentMethod), $("#ddlCustomerId").val(r.CustomerId), $("#ddlBillStatus").val(r.BillStatus); var s = r.BillDetails; if (function (e) { var a = []; $.each(e, function (t, e) { a.push(e.Product) }), t.products = a }(s), null !== r.BillDetails && r.BillDetails.length > 0) { var l = "", i = $("#template-table-bill-details").html(); $.each(s, function (t, n) { var r = e(n.ProductId), s = a(n.ColorId), u = o(n.SizeId); l += Mustache.render(i, { Id: n.Id, Products: r, Colors: s, Sizes: u, Quantity: n.Quantity }) }), $("#tbl-bill-details").html(l) } $("#modal-detail").modal("show"), structures.stopLoading() }, error: function (t) { structures.notify("Has an error in progress", "error"), structures.stopLoading() } }) }), $("#btnSave").on("click", function (t) { if ($("#frmMaintainance").valid()) { t.preventDefault(); var e = $("#hidId").val(), a = $("#txtCustomerName").val(), o = $("#txtCustomerAddress").val(), s = $("#ddlCustomerId").val(), l = $("#txtCustomerMobile").val(), i = $("#txtCustomerMessage").val(), u = $("#ddlPaymentMethod").val(), d = $("#ddlBillStatus").val(), c = []; return $.each($("#tbl-bill-details tr"), function (t, a) { c.push({ Id: $(a).data("id"), ProductId: $(a).find("select.ddlProductId").first().val(), Quantity: $(a).find("input.txtQuantity").first().val(), ColorId: $(a).find("select.ddlColorId").first().val(), SizeId: $(a).find("select.ddlSizeId").first().val(), BillId: e }) }), $.ajax({ type: "POST", url: "/Admin/Bill/SaveEntity", data: { Id: e, BillStatus: d, CustomerAddress: o, CustomerId: s, CustomerMessage: i, CustomerMobile: l, CustomerName: a, PaymentMethod: u, Status: 1, BillDetails: c }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { structures.notify("Save order successful", "success"), $("#modal-detail").modal("hide"), n(), structures.stopLoading(), r(!0) }, error: function () { structures.notify("Has an error in progress", "error"), structures.stopLoading() } }), !1 } }), $("#btnAddDetail").on("click", function () { var t = $("#template-table-bill-details").html(), n = e(null), r = a(null), s = o(null), l = Mustache.render(t, { Id: 0, Products: n, Colors: r, Sizes: s, Quantity: 0, Total: 0 }); $("#tbl-bill-details").append(l) }), $("body").on("click", ".btn-delete-detail", function () { $(this).parent().parent().remove() }), $("#btnExport").on("click", function () { var t = $("#hidId").val(); $.ajax({ type: "POST", url: "/Admin/Bill/ExportExcel", data: { billId: t }, beforeSend: function () { structures.startLoading() }, success: function (t) { window.location.href = t, structures.stopLoading() } }) }) } };