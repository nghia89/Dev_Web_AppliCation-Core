var productController = function () { var t = new QuantityManagement, e = new WholePriceManagement, a = new ImageManagement; function o(t) { var e = $("#table-template").html(), a = ""; $.ajax({ type: "GET", data: { categoryId: $("#ddlCategorySearch").val(), keyword: $("#txtKeyword").val(), page: structures.configs.pageIndex, pageSize: structures.configs.pageSize }, url: "/admin/product/GetAllPaging", dataType: "JSON", success: function (r) { $.each(r.Results, function (t, o) { a += Mustache.render(e, { Id: o.Id, Name: o.Name, Image: null === o.Image ? '<img src="/admin-side/images/user.png" width=25' : '<img src="' + o.Image + '" width=25 />', CategoryName: o.ProductCategory.Name, Price: structures.formatNumber(o.Price, 0), CreatedDate: structures.dateTimeFormatJson(o.DateCreated), Status: structures.getStatus(o.Status) }) }), $("#lblTotalRecords").text(r.RowCount), "" !== a && $("#tbl-content").html(a), function (t, e, a) { var o = Math.ceil(t / structures.configs.pageSize); 0 !== $("#paginationUL a").length && !0 !== a || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")); $("#paginationUL").twbsPagination({ totalPages: o, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, a) { structures.configs.pageIndex = a, setTimeout(e(), 200) } }) }(r.RowCount, function () { o() }, t), structures.stopLoading() }, error: function (t) { console.log(t), structures.notify("Không thể tải dữ liệu", "error") } }) } function r(t) { $.ajax({ url: "/Admin/ProductCategory/GetAll", type: "GET", dataType: "json", async: !1, success: function (e) { var a = []; $.each(e, function (t, e) { a.push({ id: e.Id, text: e.Name, parentId: e.ParentId, sortOrder: e.SortOrder }) }); var o = structures.unflattern(a); $("#ddlCategoryIdM").combotree({ data: o }), $("#ddlCategoryIdImportExcel").combotree({ data: o }), void 0 !== t && $("#ddlCategoryIdM").combotree("setValue", t) } }) } function n() { $("#hidIdM").val(0), $("#txtNameM").val(""), r(""), $("#txtDescM").val(""), $("#txtUnitM").val(""), $("#txtPriceM").val("0"), $("#txtOriginalPriceM").val(""), $("#txtPromotionPriceM").val(""), $("#txtImage").val(""), $("#txtTagM").val(""), $("#txtMetakeywordM").val(""), $("#txtMetaDescriptionM").val(""), $("#txtSeoPageTitleM").val(""), $("#txtSeoAliasM").val(""), $("#productStatus").val(""), $("#txtTotal").val(""), CKEDITOR.instances.txtContent.setData(""), $("#ckStatusM").prop("checked", !0), $("#ckHotM").prop("checked", !1), $("#ckShowHomeM").prop("checked", !1), $("#ckOldProduct").prop("checked", !1), $("#isProductPlashSale").prop("checked", !1) } this.initialize = function () { $.ajax({ type: "get", url: "/Admin/Product/GetAllCategory", dataType: "json", success: function (t) { var e = "<option value=''>--Select category--</option>"; $.each(t, function (t, a) { e += "<option value='" + a.Id + "'>" + a.Name + "</option>" }), $("#ddlCategorySearch").html(e) }, error: function (t) { console.log(t), structures.notify("Không thể tải dữ liệu", "error") } }), o(), $("#ddlShowPage").on("change", function () { structures.configs.pageSize = $(this).val(), structures.configs.pageIndex = 1, o(!0) }), $("#btnSearch").on("click", function () { o() }), $("#txtKeyword").on("keypress", function (t) { 13 === t.which && o() }), $("#btnCreate").on("click", function () { n(), r(), $("#modal-add-edit").modal("show") }), $("#btnSelectImg").on("click", function () { $("#fileInputImage").click() }), $("#fileInputImage").on("change", function () { for (var t = $(this).get(0), e = t.files, a = new FormData, o = 0; o < e.length; o++)a.append(e[o].name, e[o]); $.ajax({ type: "POST", url: "/Admin/Upload/UploadImage", contentType: !1, processData: !1, data: a, success: function (t) { if (!0 === t.Status) return structures.notify("File đã tồn tại trong hệ thống", "warning"), $("#txtImage").val(t.FileName), void $("#linkImg").append('<img width="200"  data-path="' + t.FileName + '" src="' + t.FileName + '">'); $("#txtImage").val(t), $("#linkImg").append('<div class="col-md-6"><img width="200"  data-path="' + t + '" src="' + t + '"></div>'), structures.notify("Upload image succesful!", "success") }, error: function () { structures.notify("There was error uploading files!", "error") } }) }), $("body").on("click", ".btn-edit", function (t) { t.preventDefault(); var e, a = $(this).data("id"); e = a, $.ajax({ type: "GET", url: "/Admin/Product/GetById", data: { id: e }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { var e = t; $("#hidIdM").val(e.Id), $("#txtNameM").val(e.Name), r(e.CategoryId), $("#txtDescM").val(e.Description), $("#txtUnitM").val(e.Unit), $("#txtPriceM").val(e.Price), $("#txtOriginalPriceM").val(e.OriginalPrice), $("#txtPromotionPriceM").val(e.PromotionPrice), $("#txtImage").val(e.Image), $("#txtTagM").val(e.Tags), $("#txtMetakeywordM").val(e.SeoKeywords), $("#txtMetaDescriptionM").val(e.SeoDescription), $("#txtSeoPageTitleM").val(e.SeoPageTitle), $("#txtSeoAliasM").val(e.SeoAlias), $("#txtProductStatus").val(e.ProductStatus), $("#txtTotal").val(e.Total), CKEDITOR.instances.txtContent.setData(e.Content), $("#ckStatusM").prop("checked", 1 === e.Status), $("#ckHotM").prop("checked", e.HotFlag), $("#ckShowHomeM").prop("checked", e.HomeFlag), $("#ckOldProduct").prop("checked", e.OldProduct), $("#isProductPlashSale").prop("checked", e.IsProductPlashSale), $("#modal-add-edit").modal("show"), structures.stopLoading() }, error: function (t) { structures.notify("Có lỗi xảy ra", "error"), structures.stopLoading() } }) }), $("#btnSave").on("click", function (t) { !function (t) { if ($("#frmMaintainance").valid()) { t.preventDefault(); var e = $("#hidIdM").val(), a = $("#txtNameM").val(), r = $("#ddlCategoryIdM").combotree("getValue"), c = $("#txtDescM").val(), i = $("#txtUnitM").val(), s = $("#txtPriceM").val(), l = $("#txtOriginalPriceM").val(), u = $("#txtPromotionPriceM").val(), d = $("#txtImage").val(), p = $("#txtTagM").val(), g = $("#txtMetakeywordM").val(), m = $("#txtMetaDescriptionM").val(), f = $("#txtSeoPageTitleM").val(), h = $("#txtSeoAliasM").val(), v = $("#txtProductStatus").val(), x = $("#txtTotal").val(), P = CKEDITOR.instances.txtContent.getData(), y = !0 === $("#ckStatusM").prop("checked") ? 1 : 0, M = $("#ckHotM").prop("checked"), S = $("#ckShowHomeM").prop("checked"), I = $("#ckBuyALotM").prop("checked"), k = $("#ckOldProduct").prop("checked"), T = $("#isProductPlashSale").prop("checked"); $.ajax({ type: "POST", url: "/Admin/Product/SaveEntity", data: { Id: e, Name: a, CategoryId: r, Image: d, Price: s, OriginalPrice: l, PromotionPrice: u, Description: c, Content: P, HomeFlag: S, HotFlag: M, BuyALot: I, OldProduct: k, Tags: p, Unit: i, Status: y, SeoPageTitle: f, SeoAlias: h, SeoKeywords: g, SeoDescription: m, ProductStatus: v, IsProductPlashSale: T, Total: x }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { structures.notify("Update product successful", "success"), $("#modal-add-edit").modal("hide"), n(), structures.stopLoading(), o(!0) }, error: function (t) { var e = t.responseJSON.Message; structures.notify(e, "error"), structures.stopLoading() } }) } }(t) }), $("body").on("click", ".btn-delete", function (t) { t.preventDefault(); var e, a = $(this).data("id"); e = a, structures.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/Product/Delete", data: { id: e }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { structures.notify("Delete successful", "success"), structures.stopLoading(), o() }, error: function (t) { structures.notify("Has an error in delete progress", "error"), structures.stopLoading() } }) }) }), $("#btn-import").on("click", function () { r(), $("#modal-import-excel").modal("show") }), $("#btnImportExcel").on("click", function () { for (var t = $("#fileInputExcel").get(0), e = t.files, a = new FormData, r = 0; r < e.length; r++)a.append("files", e[r]); return a.append("categoryId", $("#ddlCategoryIdImportExcel").combotree("getValue")), $.ajax({ url: "/Admin/Product/ImportExcel", type: "POST", data: a, processData: !1, contentType: !1, success: function (t) { $("#modal-import-excel").modal("hide"), o() } }), !1 }), $("#btn-export").on("click", function () { $.ajax({ type: "POST", url: "/Admin/Product/ExportExcel", beforeSend: function () { structures.startLoading() }, success: function (t) { window.location.href = t, structures.stopLoading() }, error: function () { structures.notify("Has an error in progress", "error"), structures.stopLoading() } }) }), CKEDITOR.replace("txtContent", {}), $.fn.modal.Constructor.prototype.enforceFocus = function () { $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function (t) { this.$element[0] === t.target || this.$element.has(t.target).length || $(t.target).closest(".cke_dialog, .cke").length || this.$element.trigger("focus") }, this)) }, t.initialize(), e.initialize(), a.initialize() } };