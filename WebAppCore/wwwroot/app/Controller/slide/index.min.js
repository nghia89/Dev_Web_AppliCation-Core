var slideShowController = function () { function t(e) { var n = $("#table-template").html(), a = ""; $.ajax({ type: "GET", data: { keyword: $("#txtKeyword").val(), page: structures.configs.pageIndex, pageSize: structures.configs.pageSize }, url: "/admin/SlideShow/GetAllPaging", dataType: "JSON", success: function (o) { $.each(o.Results, function (t, e) { a += Mustache.render(n, { Id: e.Id, Name: e.Name, Image: null === e.Image ? '<img src="/admin-side/images/user.png" width=25' : '<img src="' + e.Image + '" width=25 />', Description: e.Description, GroupAlias: e.GroupAlias, Status: structures.getStatus(e.Status) }) }), $("#lblTotalRecords").text(o.RowCount), "" !== a && $("#tbl-content").html(a), function (t, e, n) { var a = Math.ceil(t / structures.configs.pageSize); 0 !== $("#paginationUL a").length && !0 !== n || ($("#paginationUL").empty(), $("#paginationUL").removeData("twbs-pagination"), $("#paginationUL").unbind("page")); $("#paginationUL").twbsPagination({ totalPages: a, visiblePages: 7, first: "Đầu", prev: "Trước", next: "Tiếp", last: "Cuối", onPageClick: function (t, n) { structures.configs.pageIndex = n, setTimeout(e(), 200) } }) }(o.RowCount, function () { t() }, e) }, error: function (t) { console.log(t), structures.notify("Không thể tải dữ liệu", "error") } }) } function e() { $("#hidId").val(0), $("#txtName").val(""), $("#txtImage").val(""), $("#txtUrl").val(""), $("#txtMetaDescription").val(""), $("#ckStatusM").prop("checked", !0) } this.initialize = function () { t(), $("#ddl-show-page").on("change", function () { structures.configs.pageSize = $(this).val(), structures.configs.pageIndex = 1, t(!0) }), $("#btnSearch").on("click", function () { t() }), $("#txtKeyword").on("keypress", function (e) { 13 === e.which && t() }), $("#btn-create").on("click", function () { e(), $("#modal-add-edit").modal("show") }), $("body").on("click", ".btn-edit", function (t) { t.preventDefault(); var e, n = $(this).data("id"); e = n, $.ajax({ type: "GET", url: "/Admin/SlideShow/GetById", data: { id: e }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (t) { var e = t; $("#hidId").val(e.Id), $("#txtName").val(e.Name), $("#txtDesc").val(e.Description), $("#txtImage").val(e.Image), $("#txtUrl").val(e.Url), $("#txtGroupAlias").val(e.GroupAlias), CKEDITOR.instances.txtContent.getData(e.Content), $("#ckStatus").prop("checked", 1 === e.Status), $("#modal-add-edit").modal("show"), structures.stopLoading() }, error: function (t) { structures.notify("Có lỗi xảy ra", "error"), structures.stopLoading() } }) }), $("#btnSave").on("click", function (n) { !function (n) { if ($("#frmMaintainance").valid()) { n.preventDefault(); var a = $("#hidId").val(), o = $("#txtName").val(), s = $("#txtDesc").val(), i = $("#txtImage").val(), r = $("#txtUrl").val(), c = $("#txtGroupAlias").val(), u = CKEDITOR.instances.txtContent.getData(), l = !0 === $("#ckStatus").prop("checked") ? 1 : 0; $.ajax({ type: "POST", url: "/Admin/SlideShow/SaveEntity", data: { Id: a, Name: o, Image: i, Description: s, Content: u, GroupAlias: c, Status: l, Url: r }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (n) { structures.notify("Update product successful", "success"), $("#modal-add-edit").modal("hide"), e(), structures.stopLoading(), t(!0) }, error: function () { structures.notify("Có lổi trong quá trình thêm.", "error"), structures.stopLoading() } }) } }(n) }), $("body").on("click", ".btn-delete", function (e) { e.preventDefault(); var n, a = $(this).data("id"); n = a, structures.confirm("Are you sure to delete?", function () { $.ajax({ type: "POST", url: "/Admin/SlideShow/Delete", data: { id: n }, dataType: "json", beforeSend: function () { structures.startLoading() }, success: function (e) { structures.notify("Delete successful", "success"), structures.stopLoading(), t() }, error: function (t) { structures.notify("Has an error in delete progress", "error"), structures.stopLoading() } }) }) }), $("#btnSelectImg").on("click", function () { $("#fileInputImage").click() }), $("#fileInputImage").on("change", function () { for (var t = $(this).get(0), e = t.files, n = new FormData, a = 0; a < e.length; a++)n.append(e[a].name, e[a]); $.ajax({ type: "POST", url: "/Admin/Upload/UploadImageSlide", contentType: !1, processData: !1, data: n, success: function (t) { $("#txtImage").val(t), structures.notify("Upload image succesful!", "success") }, error: function () { structures.notify("There was error uploading files!", "error") } }) }), CKEDITOR.replace("txtContent", {}), $.fn.modal.Constructor.prototype.enforceFocus = function () { $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function (t) { this.$element[0] === t.target || this.$element.has(t.target).length || $(t.target).closest(".cke_dialog, .cke").length || this.$element.trigger("focus") }, this)) } } };